server:
  port: 8080
spring:
  application:
    name: booking-application
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:postgresql://${POSTGRESQL_HOST:localhost}:${POSTGRESQL_PORT:5432}/${POSTGRESQL_DATABASE:booking}
    username: ${POSTGRESQL_USER:root}
    password: ${POSTGRESQL_PASS:root}
    hikari:
      poolName: Hikari
      auto-commit: false
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    database: postgresql
    show-sql: true
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
    generate-ddl: true
    properties:
      hibernate.jdbc.time_zone: UTC
      hibernate.id.new_generator_mappings: true
      hibernate.connection.provider_disables_autocommit: true
      hibernate.cache.use_second_level_cache: false
      hibernate.cache.use_query_cache: false
      hibernate.generate_statistics: false
      # modify batch size as necessary
      hibernate.jdbc.batch_size: 25
      hibernate.order_inserts: true
      hibernate.order_updates: true
      hibernate.query.fail_on_pagination_over_collection_fetch: true
      hibernate.query.in_clause_parameter_padding: true
#  data:
#    redis:
#      host: localhost
#      port: 6379
#      password: redis
jwt:
  expired: 60
  rsa-private-key: classpath:certs/privateKey.pem
  rsa-public-key: classpath:certs/publicKey.pem
logging:
  level:
    ROOT: INFO
    org.hibernate.SQL: INFO
    com.cinema.authentication: debug
springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true
openapi:
  service:
    api-docs: api-service
    title: ${API_TITLE:DUMMY-API-TITLE}
    server: ${API_URL:http://localhost:8080}
    version: 1.0.0